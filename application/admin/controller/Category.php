<?php

namespace app\admin\controller;

use think\Controller;

class Category extends Common {
    //设置模型属性
    protected $db;
    //当需要调用父级有构造函数时，就不能再写__construct，所以要用_initialize方法
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->db=new \app\common\model\Category();
    }

    /*
     * 栏目首页
     */
    public function index(){
        //获取栏目数据,db为系统函数，用来查询数据库数据
        //$data=db('category')->select();
        //获得子栏目的树状结构
        $data=$this->db->getAll();
        //halt($data);
        //分配数据
        $this->assign('data',$data);
        return $this->fetch();
    }

    /*
     * 栏目添加页
     */
    public function store(){
        if(request()->isPost()){
            //halt(input('post.'));
            $res=$this->db->store(input('post.'));
            if($res['valid']){
                //添加成功
                $this->success($res['msg'],'admin/category/index');
            }else{
                //添加失败
                $this->error($res['msg']);
            }
        }
        return $this->fetch();
    }

    /*
     * 添加子类
     */
    public function addson(){
        if(request()->isPost()){
            $res=$this->db->store(input('post.'));
            if($res['valid']){
                //添加成功
                $this->success($res['msg'],'admin/category/index');
            }else{
                //添加失败
                $this->error($res['msg']);
            }
        }
        //通过param获取get方式请求的数据
        $id=input('param.id');
        //halt($id);
        //获得id为$id的这一组数据，
        //在页面显示这一组数据的所属栏目，
        //所以在此页面添加的栏目的父级栏目就是这一组数据所对应的栏目
        $data=$this->db->where('id',$id)->find();
        //halt($data);
        $this->assign('data',$data);
        return $this->fetch();
    }
    
    /*
     * 编辑栏目
     */
    public function edit(){
        if(request()->isPost()){
            $res=$this->db->edit(input('post.'));
            if($res['valid']){
                //编辑成功
                $this->success('编辑成功','index');
            }else{
                //编辑失败
                $this->error($res['msg']);
            }
        }
        $id=input('param.id');
        //halt($id);
        //获得旧数据
        $data=$this->db->where('id',$id)->find();
        //halt($data);
        $this->assign('data',$data);
        //获得所属分类（不能是自己和自己的子类）
       $cateDate=$this->db->getCateData($id);
       $this->assign('cateData',$cateDate);
        return $this->fetch();
    }
    /*
     * 删除栏目
     */
    public function del(){
       //halt(input('get.id'));
        $res=$this->db->del(input('get.id'));
        if($res['valid']){
            //删除成功
            $this->success($res['msg'],'index');
        }else{
            //删除失败
            $this->error($res['msg']);
        }
    }
}
